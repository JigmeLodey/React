{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapShotToMap } from \"../../firebase/firebase.util\";\nimport ShopActionTypes from \"./shop.type\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.action\";\nexport function* fetchCollectionsStartAsync() {\n  const collectionRef = firestore.collection(\"collections\"); // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/root/Documents/React/React/src/redux/shop/shop.saga.js"],"names":["takeEvery","firestore","convertCollectionsSnapShotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","collectionRef","collection","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,8BAHP;AAIA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,eAHP;AAKA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB,CAD4C,CAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMT,SAAS,CACbG,eAAe,CAACO,uBADH,EAEbJ,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapShotToMap,\n} from \"../../firebase/firebase.util\";\nimport ShopActionTypes from \"./shop.type\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.action\";\n\nexport function* fetchCollectionsStartAsync() {\n  const collectionRef = firestore.collection(\"collections\");\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsStartAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}