{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapShotToMap } from \"../../firebase/firebase.util\";\nimport ShopActionTypes from \"./shop.type\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.action\";\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/root/Documents/React/React/client/src/redux/shop/shop.saga.js"],"names":["takeLatest","all","call","put","firestore","convertCollectionsSnapShotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,8BAHP;AAIA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,eAHP;AAKA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAhC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,aAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CACdM,eAAe,CAACY,uBADF,EAEdT,0BAFc,CAAhB;AAID;AACD,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapShotToMap,\n} from \"../../firebase/firebase.util\";\nimport ShopActionTypes from \"./shop.type\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.action\";\n\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsStartAsync\n  );\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}