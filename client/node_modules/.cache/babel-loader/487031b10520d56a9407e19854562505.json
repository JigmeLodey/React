{"ast":null,"code":"import CartActionType from \"./cart.type\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst CardReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionType.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionType.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionType.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionType.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionType.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CardReducer;\nexport default CardReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardReducer\");","map":{"version":3,"sources":["/root/Documents/React/React/src/redux/cart/cart.reducer.js"],"names":["CartActionType","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","CardReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,aAA3B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,cAAc,CAACU,kBAApB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIF,SAAKJ,cAAc,CAACW,QAApB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFnB,OAAP;;AAIF,SAAKZ,cAAc,CAACa,oBAApB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACRC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADpC;AAFN,OAAP;;AAMF,SAAKhB,cAAc,CAACiB,WAApB;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFxB,OAAP;;AAIF,SAAKZ,cAAc,CAACkB,UAApB;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAhCD;;KAAMD,W;AAkCN,eAAeA,WAAf","sourcesContent":["import CartActionType from \"./cart.type\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\nconst CardReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionType.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n    case CartActionType.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case CartActionType.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItem) => cartItem.id !== action.payload.id\n        ),\n      };\n    case CartActionType.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    case CartActionType.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default CardReducer;\n"]},"metadata":{},"sourceType":"module"}