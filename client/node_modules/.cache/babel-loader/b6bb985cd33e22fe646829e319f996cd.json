{"ast":null,"code":"var _jsxFileName = \"/root/Documents/React/React/src/component/auth/signUp/sign-up.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-up.style.scss\";\nimport FormInput from \"../../form-input/form-input.component\";\nimport CusButton from \"../../cus-button/cus-button.component\";\nimport { signUpStart } from \"../../../redux/user/user.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props;\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = async event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \" I do not have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sing-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"displayName\",\n          type: \"text\",\n          value: this.state.displayName,\n          onChange: this.handleChange,\n          label: \"Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CusButton, {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nmapDispatchtoProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchtoProps)(SignUp);","map":{"version":3,"sources":["/root/Documents/React/React/src/component/auth/signUp/sign-up.component.jsx"],"names":["React","connect","FormInput","CusButton","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","state","props","handleChange","name","value","target","setState","render","mapDispatchtoProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-up.style.scss\";\nimport FormInput from \"../../form-input/form-input.component\";\nimport CusButton from \"../../cus-button/cus-button.component\";\nimport { signUpStart } from \"../../../redux/user/user.action\";\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { displayName, email, password } = this.state;\n    const { signUpStart } = this.props;\n    signUpStart({ displayName, email, password });\n  };\n  handleChange = async (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\"> I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form className=\"sing-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"displayName\"\n            type=\"text\"\n            value={this.state.displayName}\n            onChange={this.handleChange}\n            label=\"Name\"\n            required\n          />\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n          <CusButton type=\"submit\">Sign Up</CusButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nmapDispatchtoProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\nexport default connect(null, mapDispatchtoProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}